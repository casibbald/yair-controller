---
# Source: yapp-controller/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: yapp-controller
  namespace: default
  labels:
    app: yapp-controller
    app.kubernetes.io/name: yapp-controller
    app.kubernetes.io/version: "latest"
spec:
  podSelector:
    matchLabels:
      app: yapp-controller
  policyTypes:
  - Ingress
  - Egress
  egress:
  # pushing tracing spans to a collector
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - port: 4317
      protocol: TCP

  # Kubernetes apiserver access
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
    ports:
    - port: 443
      protocol: TCP
    - port: 6443
      protocol: TCP
  # DNS egress
  - to:
    - podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - port: 53
      protocol: UDP

  ingress:
  # prometheus metrics scraping support
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
      podSelector:
        matchLabels:
          app: prometheus
    ports:
    - port: http
      protocol: TCP
---
# Source: yapp-controller/templates/rbac.yaml
# Scoped service account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: yapp-controller
  labels:
    app: yapp-controller
    app.kubernetes.io/name: yapp-controller
    app.kubernetes.io/version: "latest"
  namespace: default
automountServiceAccountToken: true
---
# Source: yapp-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: yapp-controller
  labels:
    app: yapp-controller
    app.kubernetes.io/name: yapp-controller
    app.kubernetes.io/version: "latest"
automountServiceAccountToken: true
---
# Source: yapp-controller/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: yapp-controller
  namespace: default
  labels:
    app: yapp-controller
    app.kubernetes.io/name: yapp-controller
    app.kubernetes.io/version: "latest"
data:
  development.yaml: |
    # Loco configuration file documentation
    # Application logging configuration
    logger:
      # Enable or disable logging.
      enable: true
      # Log level, options: trace, debug, info, warn or error.
      level: debug
      # Define the logging format. options: compact, pretty or json
      format: compact
      # By default the logger has filtering only logs that came from your code or logs that came from `loco` framework. to see all third party libraries
      # Uncomment the line below to override to see all third party libraries you can enable this config and override the logger filters.
      # override_filter: trace

    # Web server configuration
    server:
      # Port on which the server will listen. the server binding is 0.0.0.0:{PORT}
      port: 8080
      # The UI hostname or IP address that mailers will point to.
      host: 0.0.0.0
      fallback: false
---
# Source: yapp-controller/templates/rbac.yaml
# Access for the service account
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: yapp-controller
rules:
  - apiGroups: ["kube.rs"]
    resources: ["documents", "documents/status", "documents/finalizers"]
    verbs: ["get", "list", "watch", "patch", "update"]
  - apiGroups: ["events.k8s.io"]
    resources: ["events"]
    verbs: ["create"]
---
# Source: yapp-controller/templates/rbac.yaml
# Binding the role to the account
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: yapp-controller
subjects:
- kind: ServiceAccount
  namespace: default
  name: yapp-controller
roleRef:
  kind: ClusterRole
  name: yapp-controller
  apiGroup: rbac.authorization.k8s.io
---
# Source: yapp-controller/templates/service.yaml
# Expose the http port of the service
apiVersion: v1
kind: Service
metadata:
  name: yapp-controller
  namespace: default
  labels:
    app: yapp-controller
    app.kubernetes.io/name: yapp-controller
    app.kubernetes.io/version: "latest"
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: yapp-controller
---
# Source: yapp-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yapp-controller
  namespace: default
  labels:
    app: yapp-controller
    app.kubernetes.io/name: yapp-controller
    app.kubernetes.io/version: "latest"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: yapp-controller
  template:
    metadata:
      labels:
        app: yapp-controller
      annotations:
        kubectl.kubernetes.io/default-container: yapp-controller
    spec:
      serviceAccountName: yapp-controller
      securityContext:
        {}
      containers:
      - name: yapp-controller
        image: casibbald/yapp-controller:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          {}
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 100Mi
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: RUST_LOG
          value: debug,kube=debug,controller=debug
        - name: OPENTELEMETRY_ENDPOINT_URL
          value: "http://otel-collector.default.svc.cluster.local:4317"
        - name: ENVIRONMENT
          value: development
        - name: RUST_BACKTRACE
          value: "1"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config/development.yaml
          subPath: development.yaml
      volumes:
      - name: config-volume
        configMap:
          name: yapp-controller
